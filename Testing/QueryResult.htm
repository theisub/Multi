<html xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Code Query Report</title><style>
          BODY { font-family: Trebuchet MS; font-size: 10pt; }
          TD { font-family: Trebuchet MS; font-size: 10pt; }
          .title { font-size: 25pt; font-weight: bold; }
          .subtitle { color: #883333; font-size: 20pt; font-weight: bold; background-color: #CCCCCC }
          .subtitleref { color: blue; font-size: 10pt }
          .info {color: black; font-size: 10pt}
          .biginfo {color: black; font-size: 12pt ; font-weight: bold}
          .infobold {color: black; font-size: 10pt ; font-weight: bold}
          .hdrcell_left  { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: left;}
          .hdrcell_leftb  { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: left;}
          .hdrcell_right { color: #FFFFFF ; font-weight: bold; background-color: #B3B3B3; text-align: right;}
          .hdrcell_rightb { color: #FFFFFF ; font-weight: bold; background-color: #939393; text-align: right;}
          .datacell_left0 { color: #000055; background-color: #DBDBDB; text-align: left; }
          .datacell_leftb0{ color: #000055; background-color: #BBBBBB; text-align: left; }
          .datacell_right0{ color: #000055; background-color: #DBDBDB; text-align: right; }
          .datacell_rightb0{ color: #000055; background-color: #BBBBBB; text-align: right; }
          .datacell_red0 { color: #000055; background-color: #FFBBBB; text-align: right; }
          .datacell_left1 { color: #000055; background-color: #EAEAEA; text-align: left; }
          .datacell_leftb1 { color: #000055; background-color: #CACACA; text-align: left; }
          .datacell_right1{ color: #000055; background-color: #EAEAEA; text-align: right; }
          .datacell_rightb1{ color: #000055; background-color: #CACACA; text-align: right; }
          .datacell_red1 { color: #000055; background-color: #FFCCCC; text-align: right; }
          .datacell_stat0 { color: #000055; background-color: #C0C0FF; text-align: right; }
          .datacell_stat1 { color: #000055; background-color: #D0D0FF; text-align: right; }
          .datacell_empty { color: #000055; background-color: #FFFFFF; text-align: right; }
          .cellreddoc { color: #000000; background-color: #FFCCCC; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_ok { color: #000000; background-color: #A0FFA0; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_warning { color: #000000; background-color: #FFFF70; text-align: left; font-size: 10pt ; font-weight: bold}
          .cql_error { color: #FFFFFF; background-color: #FF0000; text-align: left; font-size: 10pt ; font-weight: bold}
        </style></head><body>ConcertSearchApi  (analysis done Today 09:10 most recent)<br /><br /><pre style="background: #F6F6F6"><font color='#008000'>//&#0160;&lt;TrendMetric&#0160;Name="</font><b style="color:#008000;background-color:#DCFFDC">#&#0160;Methods</b><font color='#008000'>"&#0160;Unit="</font><b style="color:#008000;background-color:#DCFFDC">Methods</b><font color='#008000'>"&#0160;/&gt;<br/></font><font color='#0000FF'>from</font>&#0160;<font color='#000000'>m</font>&#0160;<font color='#0000FF'>in</font>&#0160;<b style="color:#000064;background-color:#E8E8FF">Application</b><font color='#000000'>.</font><font color='#000000'>Methods</font><font color='#000000'>.</font><font color='#000000'>Where</font><font color='#000000'>(</font><font color='#000000'>m</font>&#0160;<font color='#000000'>=&gt;</font>&#0160;<font color='#000000'>!</font><font color='#000000'>m</font><font color='#000000'>.</font><font color='#000000'>IsGeneratedByCompiler</font><font color='#000000'>)</font><font color='#000000'><br/></font><font color='#0000FF'>select</font>&#0160;<font color='#0000FF'>new</font>&#0160;<font color='#000000'>{</font><font color='#000000'><br/>&#0160;&#0160;&#0160;</font><font color='#000000'>m</font><font color='#000000'>,</font><font color='#000000'><br/>&#0160;&#0160;&#0160;</font><font color='#000000'>Debt</font>&#0160;<font color='#000000'>=</font>&#0160;<font color='#000000'>m</font><font color='#000000'>.</font><font color='#000000'>Debt</font><font color='#000000'>(</font><font color='#000000'>)</font><font color='#000000'>,</font><font color='#000000'><br/>&#0160;&#0160;&#0160;</font><font color='#000000'>Issues</font>&#0160;<font color='#000000'>=</font>&#0160;<font color='#000000'>m</font><font color='#000000'>.</font><font color='#000000'>Issues</font><font color='#000000'>(</font><font color='#000000'>)</font><font color='#000000'><br/></font><font color='#000000'>}</font><font color='#000000'><br/><br/></font><font color='#008000'>//&lt;Description&gt;</font><b style="color:#008000;background-color:#F5FFF5"><br/></b><font color='#008000'>//</font><b style="color:#008000;background-color:#F5FFF5">&#0160;This&#0160;trend&#0160;metric&#0160;query&#0160;counts&#0160;all&#0160;application&#0160;methods&#0160;non-generated&#0160;by&#0160;compiler.<br/></b><font color='#008000'>//</font><b style="color:#008000;background-color:#F5FFF5">&#0160;For&#0160;each&#0160;method&#0160;it&#0160;shows&#0160;the&#0160;estimated&#0160;technical-debt&#0160;and&#0160;the&#0160;issues.<br/></b><font color='#008000'>//&lt;/Description&gt;</font></pre><table border="1" cellpadding="3" cellspacing="0" bordercolor="white"><tr><td class="hdrcell_left">89 methods</td><td class="hdrcell_left">Debt</td><td class="hdrcell_left">Issues</td><td class="hdrcell_left">Full Name</td></tr><tr><td class="datacell_left1">GetCity(String)</td><td class="datacell_right1">7min</td><td class="datacell_right1">2 issues</td><td class="datacell_left1">ConcertNotifier.CityActions.GetCity (String)</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.CityActions..ctor()</td></tr><tr><td class="datacell_left1">SelectAllConcerts()</td><td class="datacell_right1">1min  30s</td><td class="datacell_right1">1 issue</td><td class="datacell_left1">ConcertNotifier.ConcertActions .SelectAllConcerts()</td></tr><tr><td class="datacell_left0">InsertConcert(Concert,Int32)</td><td class="datacell_right0">2min  0s</td><td class="datacell_right0">1 issue</td><td class="datacell_left0">ConcertNotifier.ConcertActions .InsertConcert(Concert,Int32)</td></tr><tr><td class="datacell_left1">InsertConc(tblConcert,Int32)</td><td class="datacell_right1">1min  30s</td><td class="datacell_right1">1 issue</td><td class="datacell_left1">ConcertNotifier.ConcertActions .InsertConc(tblConcert,Int32)</td></tr><tr><td class="datacell_left0">InsertConcerts(Concert,Int32)</td><td class="datacell_right0">1min  0s</td><td class="datacell_right0">1 issue</td><td class="datacell_left0">ConcertNotifier.ConcertActions .InsertConcerts(Concert,Int32)</td></tr><tr><td class="datacell_left1">ShowConcList(Int32)</td><td class="datacell_right1">7min</td><td class="datacell_right1">2 issues</td><td class="datacell_left1">ConcertNotifier.ConcertActions .ShowConcList(Int32)</td></tr><tr><td class="datacell_left0">ShowConcList(Int32,String)</td><td class="datacell_right0">8min</td><td class="datacell_right0">2 issues</td><td class="datacell_left0">ConcertNotifier.ConcertActions .ShowConcList(Int32,String)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.ConcertActions..ctor()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.myContext..ctor()</td></tr><tr><td class="datacell_left1">OnModelCreating(DbModelBuilder)</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.myContext .OnModelCreating(DbModelBuilder)</td></tr><tr><td class="datacell_left0">SelectAllGroups()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.GroupActions .SelectAllGroups()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.GroupActions..ctor()</td></tr><tr><td class="datacell_left0">.ctor(myContext)</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.GroupActions..ctor (myContext)</td></tr><tr><td class="datacell_left1">DeleteAll()</td><td class="datacell_right1">7min</td><td class="datacell_right1">2 issues</td><td class="datacell_left1">ConcertNotifier.GroupActions.DeleteAll()</td></tr><tr><td class="datacell_left0">DeleteGroup(Int32)</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.GroupActions.DeleteGroup (Int32)</td></tr><tr><td class="datacell_left1">InsertGroup(Int32,String)</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.GroupActions.InsertGroup (Int32,String)</td></tr><tr><td class="datacell_left0">InsertGroupObject(tblGroup)</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.GroupActions .InsertGroupObject(tblGroup)</td></tr><tr><td class="datacell_left1">ContainsGroup(String)</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.GroupActions .ContainsGroup(String)</td></tr><tr><td class="datacell_left0">FindGroupByName(String)</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.GroupActions .FindGroupByName(String)</td></tr><tr><td class="datacell_left1">FindGroupById(Int32)</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.GroupActions .FindGroupById(Int32)</td></tr><tr><td class="datacell_left0">SendInfoToUser(Int32,String,Concert)</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.Program.SendInfoToUser (Int32,String,Concert)</td></tr><tr><td class="datacell_left1">BotOnMessageReceived(Object ,MessageEventArgs)</td><td class="datacell_right1">13min</td><td class="datacell_right1">1 issue</td><td class="datacell_left1">ConcertNotifier.Program .BotOnMessageReceived(Object ,MessageEventArgs)</td></tr><tr><td class="datacell_left0">CreateBot()</td><td class="datacell_right0">10min</td><td class="datacell_right0">1 issue</td><td class="datacell_left0">ConcertNotifier.Program.CreateBot()</td></tr><tr><td class="datacell_left1">ShowConcerts(Object)</td><td class="datacell_right1">7min</td><td class="datacell_right1">2 issues</td><td class="datacell_left1">ConcertNotifier.Program.ShowConcerts (Object)</td></tr><tr><td class="datacell_left0">Main(String[])</td><td class="datacell_right0">40min</td><td class="datacell_right0">1 issue</td><td class="datacell_left0">ConcertNotifier.Program.Main(String[])</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.Program..ctor()</td></tr><tr><td class="datacell_left0">.cctor()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.Program..cctor()</td></tr><tr><td class="datacell_left1">SelectAllSubscriptions()</td><td class="datacell_right1">2min  30s</td><td class="datacell_right1">1 issue</td><td class="datacell_left1">ConcertNotifier.SubscriptionActions .SelectAllSubscriptions()</td></tr><tr><td class="datacell_left0">SelectSubscriptions(Int32)</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.SubscriptionActions .SelectSubscriptions(Int32)</td></tr><tr><td class="datacell_left1">DeleteAllSubscriptions(Int32)</td><td class="datacell_right1">5min</td><td class="datacell_right1">1 issue</td><td class="datacell_left1">ConcertNotifier.SubscriptionActions .DeleteAllSubscriptions(Int32)</td></tr><tr><td class="datacell_left0">DeleteSubscription(Int32,String)</td><td class="datacell_right0">5min</td><td class="datacell_right0">1 issue</td><td class="datacell_left0">ConcertNotifier.SubscriptionActions .DeleteSubscription(Int32,String)</td></tr><tr><td class="datacell_left1">ShowSubList(Int32)</td><td class="datacell_right1">7min</td><td class="datacell_right1">2 issues</td><td class="datacell_left1">ConcertNotifier.SubscriptionActions .ShowSubList(Int32)</td></tr><tr><td class="datacell_left0">DeleteSubscription(Int32,Int32)</td><td class="datacell_right0">1min  0s</td><td class="datacell_right0">1 issue</td><td class="datacell_left0">ConcertNotifier.SubscriptionActions .DeleteSubscription(Int32,Int32)</td></tr><tr><td class="datacell_left1">InsertSubscription(Int32,Int32)</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.SubscriptionActions .InsertSubscription(Int32,Int32)</td></tr><tr><td class="datacell_left0">ContainsSubscription(String,Int32)</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.SubscriptionActions .ContainsSubscription(String,Int32)</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.SubscriptionActions. .ctor()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.tblConcert..ctor()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.tblGroup..ctor()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.tblNotification..ctor()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.tblSubscription..ctor()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.tblUser..ctor()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.UserActions..ctor()</td></tr><tr><td class="datacell_left0">.ctor(myContext)</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.UserActions..ctor (myContext)</td></tr><tr><td class="datacell_left1">SelectAllUsers()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.UserActions .SelectAllUsers()</td></tr><tr><td class="datacell_left0">InsertUser(Int32,String)</td><td class="datacell_right0">20min</td><td class="datacell_right0">1 issue</td><td class="datacell_left0">ConcertNotifier.UserActions.InsertUser (Int32,String)</td></tr><tr><td class="datacell_left1">AddingCityToUser(Int32,String)</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.UserActions .AddingCityToUser(Int32,String)</td></tr><tr><td class="datacell_left0">ContainsUser(Int32)</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.UserActions.ContainsUser (Int32)</td></tr><tr><td class="datacell_left1">FindUser(Int32)</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">ConcertNotifier.UserActions.FindUser (Int32)</td></tr><tr><td class="datacell_left0">UpdateUser(Int32,String)</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">ConcertNotifier.UserActions.UpdateUser (Int32,String)</td></tr><tr><td class="datacell_left1">UpdateCityOfUser()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.FunctionalTests .UpdateCityOfUser()</td></tr><tr><td class="datacell_left0">InsertUser()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.FunctionalTests.InsertUser ()</td></tr><tr><td class="datacell_left1">WrongInsertUser()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.FunctionalTests .WrongInsertUser()</td></tr><tr><td class="datacell_left0">RemoveExistingGroup()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.FunctionalTests .RemoveExistingGroup()</td></tr><tr><td class="datacell_left1">RemoveNonexistGroup()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.FunctionalTests .RemoveNonexistGroup()</td></tr><tr><td class="datacell_left0">ShowList()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.FunctionalTests.ShowList()</td></tr><tr><td class="datacell_left1">ShowEmptyList()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.FunctionalTests .ShowEmptyList()</td></tr><tr><td class="datacell_left0">ShowListOfUnauth()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.FunctionalTests .ShowListOfUnauth()</td></tr><tr><td class="datacell_left1">ClearList()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.FunctionalTests.ClearList( )</td></tr><tr><td class="datacell_left0">RemoveFromList()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.FunctionalTests .RemoveFromList()</td></tr><tr><td class="datacell_left1">RemoveFromMiddleList()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.FunctionalTests .RemoveFromMiddleList()</td></tr><tr><td class="datacell_left0">RemoveNonExistFromList()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.FunctionalTests .RemoveNonExistFromList()</td></tr><tr><td class="datacell_left1">ShowEmptyConcerts()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.FunctionalTests .ShowEmptyConcerts()</td></tr><tr><td class="datacell_left0">ShowConcert()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.FunctionalTests .ShowConcert()</td></tr><tr><td class="datacell_left1">ShowConcertInTown()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.FunctionalTests .ShowConcertInTown()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.FunctionalTests..ctor()</td></tr><tr><td class="datacell_left1">AddCityNewUser()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.IntegrationTests .AddCityNewUser()</td></tr><tr><td class="datacell_left0">RemoveExistingSubscription()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.IntegrationTests .RemoveExistingSubscription()</td></tr><tr><td class="datacell_left1">RemoveEmptySubscription()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.IntegrationTests .RemoveEmptySubscription()</td></tr><tr><td class="datacell_left0">ShowArtistList()</td><td class="datacell_right0">2min  54s</td><td class="datacell_right0">1 issue</td><td class="datacell_left0">SearchApiTest.IntegrationTests .ShowArtistList()</td></tr><tr><td class="datacell_left1">CheckClearSubscriptionsWithAdditionalUse r()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.IntegrationTests .CheckClearSubscriptionsWithAdditionalUs er()</td></tr><tr><td class="datacell_left0">CheckClearSubscriptions()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.IntegrationTests .CheckClearSubscriptions()</td></tr><tr><td class="datacell_left1">AddConcertOfNewGroup()</td><td class="datacell_right1">2min  6s</td><td class="datacell_right1">1 issue</td><td class="datacell_left1">SearchApiTest.IntegrationTests .AddConcertOfNewGroup()</td></tr><tr><td class="datacell_left0">AddConcertOfExistingGroup()</td><td class="datacell_right0">2min  48s</td><td class="datacell_right0">1 issue</td><td class="datacell_left0">SearchApiTest.IntegrationTests .AddConcertOfExistingGroup()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.IntegrationTests..ctor()</td></tr><tr><td class="datacell_left0">GetAllUsers()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.MockTests.GetAllUsers()</td></tr><tr><td class="datacell_left1">InsertUser()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.MockTests.InsertUser()</td></tr><tr><td class="datacell_left0">FindUserTest()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.MockTests.FindUserTest()</td></tr><tr><td class="datacell_left1">TestDeletion()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.MockTests.TestDeletion()</td></tr><tr><td class="datacell_left0">UpdateUserTest()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.MockTests.UpdateUserTest()</td></tr><tr><td class="datacell_left1">.ctor()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.MockTests..ctor()</td></tr><tr><td class="datacell_left0">.ctor()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.UnitTests..ctor()</td></tr><tr><td class="datacell_left1">GetAllConcertsByGroupTestNull()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.UnitTests .GetAllConcertsByGroupTestNull()</td></tr><tr><td class="datacell_left0">GetAllConcertsByGroupTestEmpty()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.UnitTests .GetAllConcertsByGroupTestEmpty()</td></tr><tr><td class="datacell_left1">ContainTest()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.UnitTests.ContainTest()</td></tr><tr><td class="datacell_left0">ContainTest_False()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.UnitTests .ContainTest_False()</td></tr><tr><td class="datacell_left1">FindGroupByIdTest()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.UnitTests .FindGroupByIdTest()</td></tr><tr><td class="datacell_left0">FindGroupByNameTest()</td><td class="datacell_right0">0min  0s</td><td class="datacell_right0">no issue</td><td class="datacell_left0">SearchApiTest.UnitTests .FindGroupByNameTest()</td></tr><tr><td class="datacell_left1">ContainGroupTest()</td><td class="datacell_right1">0min  0s</td><td class="datacell_right1">no issue</td><td class="datacell_left1">SearchApiTest.UnitTests.ContainGroupTest ()</td></tr><tr><td class="datacell_stat0">Sum:</td><td class="datacell_stat0">2h  35min</td><td class="datacell_stat0">27</td><td class="datacell_empty" /></tr><tr><td class="datacell_stat1">Average:</td><td class="datacell_stat1">1min  44s</td><td class="datacell_stat1">0.3</td><td class="datacell_empty" /></tr><tr><td class="datacell_stat0">Minimum:</td><td class="datacell_stat0">0min  0s</td><td class="datacell_stat0">0</td><td class="datacell_empty" /></tr><tr><td class="datacell_stat1">Maximum:</td><td class="datacell_stat1">40min</td><td class="datacell_stat1">2</td><td class="datacell_empty" /></tr><tr><td class="datacell_stat0">Standard deviation:</td><td class="datacell_stat0">5min</td><td class="datacell_stat0">0.59</td><td class="datacell_empty" /></tr><tr><td class="datacell_stat1">Variance:</td><td class="datacell_stat1">3d  3h</td><td class="datacell_stat1">0.35</td><td class="datacell_empty" /></tr></table></body></html>